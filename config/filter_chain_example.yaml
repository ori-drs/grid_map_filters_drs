grid_map_filters:

  - name: buffer_normalizer
    type: gridMapFilters/BufferNormalizerFilter

  # Inpainting
  - name: inpainting
    type: gridMapCv/InpaintFilter
    params:
      input_layer: elevation
      output_layer: elevation_inpainted_original
      radius: 0.1 # in m
  
    # Inpainting
  - name: denoise_inpaint
    type: gridMapFiltersDrs/DenoiseAndInpaintFilter
    params:
      input_layer: elevation
      output_layer: elevation_inpainted
      radius: 0.1 # in m
      inpainting_type: telea # 'ns' or 'telea' allowed
      pre_denoising: false # enables denoising before inpainting
      denoising_radius: 0.5 # m
      denoising_type: non_local # 'total_variation', 'non_local', 'gaussian', and 'median' supported
      total_variation_lambda: 1.0

  - name: learned_risk
    type: gridMapFiltersDrs/LearnedMotionCostsFilter
    params:
      input_layer: elevation_inpainted
      output_layer: risk_learned
      cost_layer: risk
      service_name: /traversability_server/compute_traversability
  
  - name: traversability_learned
    type: gridMapFilters/MathExpressionFilter
    params:
      output_layer: traversability_learned
      expression:  1.0 - ((risk_learned - min(risk_learned)) / (max(risk_learned) - min(risk_learned)))

  # Inpainting (radial)
  - name: inpaint_radially
    type: gridMapFiltersDrs/RadialInpaintFilter
    params:
      input_layer: elevation
      output_layer: elevation_inpainted_radially
      radius: 0.15 # in m
      pre_denoising: true # enables denoising before inpainting
      denoising_radius: 0.15 # m

  # # GP Inpainting
  # - name: gp_inpainting
  #   type: gridMapFiltersDrs/GaussianProcessInpaintFilter
  #   params:
  #     input_layer: elevation
  #     output_layer: elevation_gp_inpainted
  #     subsample_skip: 20 # skips n cells to reduce computation
  
  # Fill nans
  - name: fill_nans
    type: gridMapFiltersDrs/NanFillerFilter
    params:
      input_layer: elevation
      output_layer: elevation_no_nans
      set_to: mean # min, max, fixed_value
      value: 0.0 # ignored if not 'fixed_value'

  # # Compute surface normals (slow method)
  # - name: surface_normals
  #   type: gridMapFilters/NormalVectorsFilter
  #   params:
  #     input_layer: elevation_inpainted
  #     output_layers_prefix: normal_slow_
  #     radius: 0.15
  #     normal_vector_positive_axis: z
  #     algorithm: raster

  # Compute surface normals (fast)
  # Default positive vector is z axis
  - name: surface_normals_fast
    type: gridMapFiltersDrs/FastNormalsVectorFilter
    params:
      input_layer: elevation_inpainted
      output_layers_prefix: normal_
      use_pre_smoothing: true
      use_post_smoothing: true
      pre_smoothing_radius: 0.15 # spatial gaussian filter (in meters)
      post_smoothing_radius: 0.1 # spatial median filter (in meters)
  
  # # Rotate surface normals.
  # - name: rotate_surface_normals
  #   type: gridMapFiltersDrs/ChangeNormalsFrameFilter
  #   params:
  #     input_layers_prefix: normal_
  #     target_frame: base_link
 
  # Compute slope from surface normal.
  - name: slope
    type: gridMapFilters/MathExpressionFilter
    params:
      output_layer: slope
      expression: acos(normal_z)
  
    # Compute base threshold
  - name: height_filter
    type: gridMapFiltersDrs/BaseHeightThresholdFilter
    params:
      input_layer: elevation_inpainted
      output_layer: height_traversability
      target_frame: base
      threshold: -0.3
      set_to_upper: 0.0
      set_to_lower: 1.0

  # Compute traversability as normalized weighted sum of slope and roughness.
  - name: traversability_geometric
    type: gridMapFilters/MathExpressionFilter
    params:
      output_layer: traversability_geometric
      # expression: (1.0 - (slope / 0.6))
      expression: 0.5 * (1.0 - (slope / 0.6)) + 0.5 * height_traversability
         
  # Compute 2D Signed Distance Field
  - name: sdf
    type: gridMapFiltersDrs/SignedDistanceField2dFilter
    params:
      input_layer: traversability_learned
      output_layer: sdf
      normalize_gradients: true
      threshold: 0.2

  - name: geodesic
    type: gridMapFiltersDrs/GeodesicDistanceField2dFilter
    params:
      input_layer: traversability_learned
      output_layer: geodesic
      normalize_gradients: true
      attractor_topic: /goal
      threshold: 0.2 # to be applied to the input layer
      use_field_smoothing: false
      field_smoothing_radius: 0.05 # m

  - name: risk_booster
    type: gridMapFilters/MathExpressionFilter
    params:
      output_layer: risk_boosted
      expression: risk_learned^2
  
  - name: geodesic_field
    type: gridMapFiltersDrs/GeodesicFieldFilter
    params:
      input_layer: risk_boosted
      output_layer: geodesic_field
      normalize_gradients: true
      attractor_topic: /goal